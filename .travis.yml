dist: xenial
language: go

go:
- 1.11.x

services:
- docker

cache:
  directories:
    - $HOME/qemu
    - $HOME/packer

addons:
  apt:
    update: true
    packages:
    - kpartx
    - python-pip
    - sshpass

before_install:
- sudo docker run --privileged linuxkit/binfmt:v0.6
- sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr tcp://0.0.0.0:1234 --oci-worker-platform linux/armhf
- sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/
- export BUILDKIT_HOST=tcp://0.0.0.0:1234

before_script:
- "echo commit: $TRAVIS_COMMIT"
- "echo tag: $TRAVIS_TAG"
- "echo branch: $TRAVIS_BRANCH"
- "echo build: $TRAVIS_BUILD_NUMBER"
- bash bin/travis-qemu.sh
- bash bin/travis-packer.sh

jobs:
  include:
    - stage: docker
      name: "pimba/librespot docker image build & publication"
      script:
      - |
        while sleep 9m; do
          echo "====[ $SECONDS seconds still running ]===="
        done &
        cd librespot && make build
      - docker images
      - |
        if [ "$TRAVIS_BRANCH" = master ]; then
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push docker.io/pimba/librespot
        fi
    -
      name: "pimba/shairport docker image build & publication"
      script:
      - |
        buildctl build --frontend=dockerfile.v0 \
            --opt platform=linux/armhf \
            --opt filename=./Dockerfile \
            --local dockerfile=./shairport \
            --local context=./shairport \
            --output type=docker,name=docker.io/pimba/shairport | docker load
      - docker images
      - |
        if [ "$TRAVIS_BRANCH" = master ]; then
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push docker.io/pimba/shairport
        fi
    -
      name: "pimba/mopidy docker image build & publication"
      script:
      - |
        while sleep 9m; do
          echo "====[ $SECONDS seconds still running ]===="
        done &
        buildctl build --frontend=dockerfile.v0 \
            --opt platform=linux/armhf \
            --opt filename=./Dockerfile \
            --local dockerfile=./mopidy \
            --local context=./mopidy \
            --output type=docker,name=docker.io/pimba/mopidy | docker load
      - docker images
      - |
        if [ "$TRAVIS_BRANCH" = master ]; then
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push docker.io/pimba/mopidy
        fi
    - stage: packer
      name: "enlarge raspbian disk image and activate ssh"
      script:
      - sudo ln -s $HOME/qemu/bin/qemu-arm /usr/local/bin/qemu-arm-static
      - wget -nv "http://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2019-07-12/2019-07-10-raspbian-buster-lite.zip"
      - sudo ~/packer/bin/packer build packer.json
      - ls -lh pimba.img
      - |
        while sleep 9m; do
          echo "====[ $SECONDS seconds still running ]===="
        done &
      - |
        sudo ~/qemu/bin/qemu-system-arm \
          -M versatilepb -cpu arm1176 -m 256 \
          -hda ./pimba.img \
          -net nic -net user,hostfwd=tcp::2222-:22 \
          -dtb ~/qemu/rpi-kernel/versatile-pb.dtb \
          -kernel ~/qemu/rpi-kernel/kernel-qemu-4.14.79-stretch \
          -append 'root=/dev/sda2 panic=1' \
          -no-reboot &
      - sudo pip install ansible
      - |
        echo "====[ Waiting for raspberrypi to finish booting ]===="
        while ! nc -w1 -z localhost 2222; do
          sleep 5
          echo -n '.'
        done
      - |
        ANSIBLE_HOST_KEY_CHECKING=False \
          ansible-playbook playbook.yaml -u pi \
            -i "127.0.0.1:2222," \
            -e "ansible_ssh_pass=raspberry"
